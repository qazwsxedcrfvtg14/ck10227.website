objTypes["lens"]={p_name:"焦距(px)",create:function(e){return{obj:{type:"lens",p1:e,p2:graphs.point(e.x+gridSize,e.y),p:100},draggingPart:{part:2}}},draw:function(e,t){var n=t.getContext("2d");n.strokeStyle="rgba(192,192,192,0.5)";n.lineWidth=5;n.lineCap="round";n.beginPath();n.moveTo(e.p1.x,e.p1.y);n.lineTo(e.p2.x,e.p2.y);n.stroke();n.lineWidth=1;n.lineCap="butt"},move:function(e,t,n){e.p1.x=e.p1.x+t;e.p1.y=e.p1.y+n;e.p2.x=e.p2.x+t;e.p2.y=e.p2.y+n;return e},clicked:function(e,t){if(mouseOnPoint(t,e.p1)){return{draggingPart:{part:1}}}if(mouseOnPoint(t,e.p2)){return{draggingPart:{part:2}}}if(mouseOnSegment(t,e)){return{draggingPart:{part:0,mouse1:t}}}return false},dragging:function(e,t,n){if(n.part==1){e.p1=t;return{obj:e}}if(n.part==2){e.p2=t;return{obj:e}}if(n.part==0){var r=n.mouse1.x-t.x;var i=n.mouse1.y-t.y;e.p1.x=e.p1.x-r;e.p1.y=e.p1.y-i;e.p2.x=e.p2.x-r;e.p2.y=e.p2.y-i;return{obj:e,draggingPart:{part:0,mouse1:t}}}},rayIntersection:function(e,t){var n=graphs.intersection(graphs.line(t.p1,t.p2),graphs.line(e.p1,e.p2));if(graphs.length_segment(graphs.segment(n,e.p1))+graphs.length_segment(graphs.segment(n,e.p2))-graphs.length_segment(e)<1e-7&&(graphs.length_segment(graphs.segment(n,t.p1))+graphs.length_segment(graphs.segment(n,t.p2))-graphs.length_segment(t)<1e-7||graphs.length_segment(graphs.segment(n,t.p1))>graphs.length_segment(graphs.segment(n,t.p2)))){return n}},shot:function(e,t){var n=graphs.intersection(graphs.line(t.p1,t.p2),graphs.line(e.p1,e.p2));var r=graphs.perpendicular_bisector(e);var i=graphs.midpoint(e);var s=graphs.intersection(r,graphs.parallel(graphs.line(e.p1,e.p2),t.p1));var o=graphs.length(s,i);var u=o*e.p/(o-e.p);var a=u*graphs.length(s,t.p1)/o;var f=graphs.intersection(r,graphs.circle(i,Math.abs(u)));var l=u>0==graphs.length(f[1],s)<graphs.length(f[2],s)?f[2]:f[1];var c=graphs.intersection(graphs.parallel(graphs.line(e.p1,e.p2),l),graphs.circle(l,Math.abs(a)));var h=graphs.line(n,a>0==graphs.length(c[1],t.p1)>graphs.length(c[2],t.p1)?c[1]:c[2]);var p=Math.atan2(h.p2.x-h.p1.x,h.p2.y-h.p1.y);return u>0?graphs.ray(n,graphs.point(h.p1.x+Math.sin(p),h.p1.y+Math.cos(p))):graphs.ray(n,graphs.point(h.p1.x-Math.sin(p),h.p1.y-Math.cos(p)))}}
