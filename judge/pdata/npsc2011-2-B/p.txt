內容 ：

　　自古至今，卡恩國境內流傳著一種在當地十分盛行的遊戲——「番茄蹲」，而「番茄蹲」這個遊戲也慢慢地傳到了其他的國家，甚至被評選為上個世紀最流行的團康遊戲。該遊戲的規則如下：

　　每場「番茄蹲」遊戲中都有一個主持人，我們稱他為「卡嗯」，而 N 位參與遊戲的人分別從 1 號開始編號到 N 號，每個參與者有「嗯下方」(蹲著) 跟「嗯上方」(站著) 兩種狀態，並且剛開始時全部的人都為「嗯上方」。主持人每個回合都會喊出：『 卡嗯蹲！卡嗯蹲！卡嗯蹲完換 k 蹲！ 』，這時編號為 k 的倍數的遊戲者就必須改變狀態 (原為「嗯上方」的變成「嗯下方」，反之亦然) (k 不會超過 N)。對於每一回合，失誤 (沒有依照「卡嗯」的指示行動) 的人便會被淘汰。而這遊戲將會進行 M 回合 (M 為某個規定好的正整數)，結束後那些在這 M 回合中被淘汰的人們將要被懲罰 (例如請存活下來的人喝飲料之類的)。

　　而現在，有 G 群人想要來一起玩「番茄蹲」，其中第 i 群人有 gi 個人，而總共加起來有 N 個人 (也就是說 g1 + g2 + ... + gG = N)。在玩之前，他們想要來訂一個新規則決定勝負：他們決定分成兩組人馬 A 隊和 B 隊，之後比積分等等 (幸好這不是我們所在意的)。

　　此時，好奇的時嗣鳴同學產生了一個問題：他想知道這 G 群人究竟會有幾種可能的配置方案。但是，其中他只在意 A 隊的人數減掉 B 隊的人數後除以 K 的餘數等於 R 的方案。到底有幾種可能的方案呢？寫個程式解決這個問題吧！

　　需要注意的是，這 G 群人之中任何一群的所有人都一定要被分在同一組之中，不可以被拆分 (也就是，對於同一群人，不能有的人被分到 A 隊有的人被分到 B 隊)。另外，我們定義兩個方案為「不同」的方案僅當存在某一組人在其中一種方案中被分到 A 隊而在另一種方案中被分到 B 隊。為了進一步簡化問題，我們也考慮其中一個隊伍為空的方案 (意即我們可以把所有人都分到 A 隊或 B 隊——而這兩種為「不同」的方案)。

　　在本題中，a 除以 b 的餘數 r 定義為：存在一個整數 q，符合 a = bq + r，其中 0 ≤ r < b。例如 10 除以 7 的餘數為 3 ，而 -14 除以 9 的餘數為 4。

輸入說明 ： 
第一行有一個整數 T (T ≤ 50)，代表接下來有幾組測試資料。

　　每一組測試資料的第一行有三個整數，G (1 ≤ G ≤ 514)、K (1 ≤ K ≤ 10000) 和 R (0 ≤ R < K)，意思分別如題目所述 ·

　　接下來第二行有共 G 個正整數 gi (1 ≤ gi ≤ 106)。

輸出說明 ： 
對於每筆測試資料請輸出一個整數，代表所求的分組方案數。由於答案可能很大，請只要輸出答案除以 1000000007 的餘數即可。
範例輸入 ： 
3
3 5 0
1 2 2
2 8 1
2 3
2 7 2
2 3
範例輸出 ：

2
1
1
